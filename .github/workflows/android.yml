name: Android CI

on:
  push:
    branches: [ "main" ]
    # Ignorar pushes que alterem só arquivos na pasta docs para evitar loop
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configurar JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache do Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Criar google-services.json
        working-directory: FirebaseLearning
        run: |
          echo -e "${{ secrets.GOOGLE_SERVICES_JSON }}" > app/google-services.json

      - name: Permitir execução do Gradle Wrapper
        working-directory: FirebaseLearning
        run: chmod +x ./gradlew

      - name: Build do projeto (gerar APK)
        working-directory: FirebaseLearning
        run: ./gradlew assembleDebug

      - name: Publicar APK como artefato
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: FirebaseLearning/app/build/outputs/apk/debug/app-debug.apk

      - name: Executar testes unitários
        working-directory: FirebaseLearning
        run: ./gradlew test

      - name: Executar Lint (análise de qualidade do código)
        working-directory: FirebaseLearning
        run: ./gradlew lintDebug

      - name: Copiar Relatório do Lint para /docs
        run: |
          mkdir -p docs
          cp FirebaseLearning/app/build/reports/lint-results-debug.html docs/lint.html

      - name: Commit automático do relatório Lint
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add docs/lint.html || true
          git diff --quiet --cached || git commit -m "Atualizar relatório Lint automático"
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.git
